class Solution {
public:
    string removeDuplicateLetters(string s) {
        // ordered_Set<string> s;
        // for(char x:s){
        //     s.insert(x);
        // }
        // set<char> ans(s.begin(), s.end());
        // return string(ans.begin(), ans.end());
        vector<int> freq(256, 0);       // Count of each char
    vector<bool> inStack(256, false); // If char already in stack
    
    for(char c : s) freq[c]++;
    
    stack<char> st;
    
    for(char c : s){
        freq[c]--;  // Reduce remaining count
        if(inStack[c]) continue; // Already in stack, skip
        
        while(!st.empty() && c < st.top() && freq[st.top()] > 0){
            inStack[st.top()] = false; // Pop , mark false
            st.pop();
        }
        
        st.push(c);
        inStack[c] = true;
    }
    
    string res = "";
    while(!st.empty()){
        res += st.top();
        st.pop();
    }
    reverse(res.begin(), res.end());
    return res;
    }
};
