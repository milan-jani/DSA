/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* temp1 = l1;
        ListNode* temp2 = l2;
        
        while (temp1 != nullptr && temp2 != nullptr) {
            temp1->val = temp1->val + temp2->val;
            temp1 = temp1->next;
            temp2 = temp2->next;
        }
        
        if (temp1 == nullptr) {
            temp1 = l1;
            while (temp1->next != nullptr) {
                temp1 = temp1->next;
            }
            temp1->next = temp2;
        } 
        temp1 = l1;
        while (temp1 != nullptr) {
            if (temp1->val > 9) {
                if (temp1->next == nullptr) {
                    temp1->next = new ListNode(1);//if the current node is the last node then we have to make extra node and it value is 1(becasue it is carry)
                } else {
                    temp1->next->val += 1;
                }
                temp1->val %= 10;
            }
            temp1 = temp1->next;
        }
        
        return l1;
    }
};
